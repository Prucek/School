Jednosmìrnì vázaný lineární seznam
==================================

[TEST01]
Inicializace seznamu
~~~~~~~~~~~~~~~~~~~~
-----------------
-----------------

[TEST02]
Pokus o volání CopyFirst nad prázdným seznamem => chyba
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*ERROR* The program has performed an illegal operation.
Operace CopyFirst volala funkci Error.

[TEST03]
Zavoláme 4x operaci InsertFirst.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 1
-----------------
-----------------
	 2
	 1
-----------------
-----------------
	 3
	 2
	 1
-----------------
-----------------
	 4
	 3
	 2
	 1
-----------------

[TEST04]
Seznam je neaktivní -- ovìøíme si to voláním funce Active.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Operace Active vrací 0.

[TEST05]
Otestujeme funkci First pøi neaktivním seznamu a funkci Active.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 4	 <= toto je aktivní prvek 
	 3
	 2
	 1
-----------------
Operace Active vrací 1.

[TEST06]
Test funkce Copy pøi aktivitì na prvním prvku
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Operace Copy vrací obsah 4.

[TEST07]
Test funkce Succ -- voláme 3x, aktivita bude na posledním prvku.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 4
	 3	 <= toto je aktivní prvek 
	 2
	 1
-----------------
-----------------
	 4
	 3
	 2	 <= toto je aktivní prvek 
	 1
-----------------
-----------------
	 4
	 3
	 2
	 1	 <= toto je aktivní prvek 
-----------------
Operace Active vrací 1.

[TEST08]
Aktualizujeme obsah aktivního prvku.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 4
	 3
	 2
	 10	 <= toto je aktivní prvek 
-----------------
Operace Active vrací 1.
Operace Copy vrací obsah 10.

[TEST09]
Provedeme je¹tì jednou Succ -- aktivita se ztratí.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 4
	 3
	 2
	 10
-----------------
Operace Active vrací 0.

[TEST10]
Pokusíme se o aktualizaci pøi neaktivním seznamu => nic
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 4
	 3
	 2
	 10
-----------------
Operace Active vrací 0.

[TEST11]
Pokus o Copy pøi neaktivním seznamu => o¹etøená chyba
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*ERROR* The program has performed an illegal operation.
Operace Copy volala funkci Error.

[TEST12]
Operace Succ pøi neaktivním seznamu nesmí zhavarovat.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 4
	 3
	 2
	 10
-----------------
Operace Active vrací 0.

[TEST13]
Pou¾ití operace CopyFirst pøi neaktivním seznamu
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Operace CopyFirst vrací obsah 4.

[TEST14]
Vyzkou¹íme operaci DeleteFirst pøi neaktivním seznamu,
pøièem¾ smazaný prvek zase vrátíme zpátky do seznamu.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 3
	 2
	 10
-----------------
-----------------
	 4
	 3
	 2
	 10
-----------------
Operace Active vrací 0.

[TEST10]
Operace First nastaví aktivitu na první prvek.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 4	 <= toto je aktivní prvek 
	 3
	 2
	 10
-----------------
Operace Active vrací 1.

[TEST11]
DeleteFirst aktivního prvku povede ke ztrátì aktivity.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 3
	 2
	 10
-----------------
Operace Active vrací 0.

[TEST12]
U¾itím operací First a Succ nastavíme aktivitu na konec seznamu.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 3	 <= toto je aktivní prvek 
	 2
	 10
-----------------
-----------------
	 3
	 2	 <= toto je aktivní prvek 
	 10
-----------------
-----------------
	 3
	 2
	 10	 <= toto je aktivní prvek 
-----------------
Operace Active vrací 1.

[TEST13]
Operace PostDelete pøi aktivitì na posledním prvku nedìlá nic.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 3
	 2
	 10	 <= toto je aktivní prvek 
-----------------
Operace Active vrací 1.

[TEST14]
Nastavíme aktivitu na zaèátek a dvakrát zavoláme PostDelete.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 3	 <= toto je aktivní prvek 
	 2
	 10
-----------------
Operace Active vrací 1.
-----------------
	 3	 <= toto je aktivní prvek 
	 10
-----------------
-----------------
	 3	 <= toto je aktivní prvek 
-----------------
Operace Active vrací 1.

[TEST15]
Otestujeme InsertFirst pøi seznamu s jediným prvkem, nastavíme
aktivitu na novì vlo¾ený prvek a opìt posuneme aktivitu na konec
seznamu.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 101
	 3	 <= toto je aktivní prvek 
-----------------
-----------------
	 101	 <= toto je aktivní prvek 
	 3
-----------------
-----------------
	 101
	 3	 <= toto je aktivní prvek 
-----------------
Operace Active vrací 1.

[TEST16]
Operací PostInsert vlo¾íme nový prvek za poslední prvek seznamu.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 101
	 3	 <= toto je aktivní prvek 
	 102
-----------------
Operace Active vrací 1.

[TEST17]
Nastavíme aktivitu na první prvek seznamu a vyzkou¹íme PostInsert.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
	 101	 <= toto je aktivní prvek 
	 3
	 102
-----------------
-----------------
	 101	 <= toto je aktivní prvek 
	 103
	 3
	 102
-----------------
Operace Active vrací 1.

[TEST18]
Otestujeme funkènost operace DisposeList.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
-----------------

[TEST24]

Následuje testování operací pøi prázdném seznamu
================================================
Operace Active vrací 0.

[TEST25]
DeleteFirst pøi prázdném seznamu => nic
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
-----------------

[TEST26]
Test PostDelete pøi prázdném seznamu => nic 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
-----------------
-----------------

[TEST27]
Je¹tì jednou DisposeList => ¾ádná zmìna
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
-----------------

[TEST28]
First ani PostInsert nad prázdným seznamem nic nedìlá.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
-----------------
-----------------
-----------------

[TEST29]
Copy a CopyFirst nad prázdným seznamem => o¹etøená chyba
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*ERROR* The program has performed an illegal operation.
Operace Copy volala funkci Error.
*ERROR* The program has performed an illegal operation.
Operace CopyFirst volala funkci Error.

[TEST30]
Actualize ani Succ by nemìly mít nad prázdným seznamem ¾ádny efekt.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-----------------
-----------------
-----------------
-----------------
Operace Active vrací 0.

----------------------- konec pøíkladu c201 -------------------------
