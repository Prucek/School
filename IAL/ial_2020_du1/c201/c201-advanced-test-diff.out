1c1
< Jednosměrně vázaný lineární seznam
---
> Jednosmìrnì vázaný lineární seznam
39c39
< Seznam je neaktivní -- ověříme si to voláním funce Active.
---
> Seznam je neaktivní -- ovìøíme si to voláním funce Active.
44c44
< Otestujeme funkci First při neaktivním seznamu a funkci Active.
---
> Otestujeme funkci First pøi neaktivním seznamu a funkci Active.
55c55
< Test funkce Copy při aktivitě na prvním prvku
---
> Test funkce Copy pøi aktivitì na prvním prvku
95c95
< Provedeme ještě jednou Succ -- aktivita se ztratí.
---
> Provedeme je¹tì jednou Succ -- aktivita se ztratí.
106c106
< Pokusíme se o aktualizaci při neaktivním seznamu => nic
---
> Pokusíme se o aktualizaci pøi neaktivním seznamu => nic
117c117
< Pokus o Copy při neaktivním seznamu => ošetřená chyba
---
> Pokus o Copy pøi neaktivním seznamu => o¹etøená chyba
123c123
< Operace Succ při neaktivním seznamu nesmí zhavarovat.
---
> Operace Succ pøi neaktivním seznamu nesmí zhavarovat.
134c134
< Použití operace CopyFirst při neaktivním seznamu
---
> Pou¾ití operace CopyFirst pøi neaktivním seznamu
139,140c139,140
< Vyzkoušíme operaci DeleteFirst při neaktivním seznamu,
< přičemž smazaný prvek zase vrátíme zpátky do seznamu.
---
> Vyzkou¹íme operaci DeleteFirst pøi neaktivním seznamu,
> pøièem¾ smazaný prvek zase vrátíme zpátky do seznamu.
167c167
< DeleteFirst aktivního prvku povede ke ztrátě aktivity.
---
> DeleteFirst aktivního prvku povede ke ztrátì aktivity.
177c177
< Užitím operací First a Succ nastavíme aktivitu na konec seznamu.
---
> U¾itím operací First a Succ nastavíme aktivitu na konec seznamu.
197c197
< Operace PostDelete při aktivitě na posledním prvku nedělá nic.
---
> Operace PostDelete pøi aktivitì na posledním prvku nedìlá nic.
207c207
< Nastavíme aktivitu na začátek a dvakrát zavoláme PostDelete.
---
> Nastavíme aktivitu na zaèátek a dvakrát zavoláme PostDelete.
225,226c225,226
< Otestujeme InsertFirst při seznamu s jediným prvkem, nastavíme
< aktivitu na nově vložený prvek a opět posuneme aktivitu na konec
---
> Otestujeme InsertFirst pøi seznamu s jediným prvkem, nastavíme
> aktivitu na novì vlo¾ený prvek a opìt posuneme aktivitu na konec
244c244
< Operací PostInsert vložíme nový prvek za poslední prvek seznamu.
---
> Operací PostInsert vlo¾íme nový prvek za poslední prvek seznamu.
254c254
< Nastavíme aktivitu na první prvek seznamu a vyzkoušíme PostInsert.
---
> Nastavíme aktivitu na první prvek seznamu a vyzkou¹íme PostInsert.
270c270
< Otestujeme funkčnost operace DisposeList.
---
> Otestujeme funkènost operace DisposeList.
277c277
< Následuje testování operací při prázdném seznamu
---
> Následuje testování operací pøi prázdném seznamu
282c282
< DeleteFirst při prázdném seznamu => nic
---
> DeleteFirst pøi prázdném seznamu => nic
288c288
< Test PostDelete při prázdném seznamu => nic 
---
> Test PostDelete pøi prázdném seznamu => nic 
294c294
< Ještě jednou DisposeList => žádná změna
---
> Je¹tì jednou DisposeList => ¾ádná zmìna
300c300
< First ani PostInsert nad prázdným seznamem nic nedělá.
---
> First ani PostInsert nad prázdným seznamem nic nedìlá.
308c308
< Copy a CopyFirst nad prázdným seznamem => ošetřená chyba
---
> Copy a CopyFirst nad prázdným seznamem => o¹etøená chyba
316c316
< Actualize ani Succ by neměly mít nad prázdným seznamem žádny efekt.
---
> Actualize ani Succ by nemìly mít nad prázdným seznamem ¾ádny efekt.
324c324
< ----------------------- konec příkladu c201 -------------------------
---
> ----------------------- konec pøíkladu c201 -------------------------
